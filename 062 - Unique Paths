A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?

Example 1:

Input: m = 3, n = 2
Output: 3
Explanation:
From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:
1. Right -> Right -> Down
2. Right -> Down -> Right
3. Down -> Right -> Right
Example 2:

Input: m = 7, n = 3
Output: 28

--------------------Solution----------------Using DP

public class Solution
    {
        public int UniquePaths(int m, int n)
        {
            int[,] tempList = new int[m,n];
            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    tempList[i,j] = -1;
                }
            }
            tempList[0, 0] = 1;
            return FindCount(m - 1, n - 1, tempList);
        }

        public int FindCount(int x,int y,int[,] list)
        {
            int number = 0;
            if (x >= 0 && y >= 0 && list[x, y] != -1)
                return list[x, y];
            else
            {
                if (x >= 0 && y >= 0)
                {
                    number = FindCount(x - 1, y, list) + FindCount(x, y - 1, list);
                }
                if (x >= 0 && y >= 0)
                {
                    list[x, y] = number;
                }
                return number;
            }
        }
    }
