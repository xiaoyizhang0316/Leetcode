Given a string S and a character C, return an array of integers representing the shortest distance from the character C in the string.

Example 1:

Input: S = "loveleetcode", C = 'e'
Output: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]
 

Note:

S string length is in [1, 10000].
C is a single character, and guaranteed to be in string S.
All letters in S and C are lowercase.

class Solution {
    public int[] shortestToChar(String S, char C) {
        char[] temp = S.toCharArray();
        int[] result = new int[temp.length];
        int t = -10000;
        for (int i = 0; i < result.length; i++)
        {
            if (temp[i] == C)
                t = i;
            result[i] = i - t;
        }
        t = 10000;
        for (int i = temp.length - 1; i >= 0; i--)
        {
            if (temp[i] == C)
                t = i;
            result[i] = Math.min(result[i], t - i);
        }
        return result;
    }
}
