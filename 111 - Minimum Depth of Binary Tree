Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

Note: A leaf is a node with no children.

Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
return its minimum depth = 2.

------------------------Solution----------------------
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        if (root == null)
        {
            return 0;
        }
        else
        {
            int result1,result2 = 0;
            result1 = minDepth(root.left);
            result2 = minDepth(root.right);
            if (result2 == 0 && result1 == 0)
            {
                return 1;
            }
            else if (result1 == 0)
            {
                return 1 + result2;
            }
            else if (result2 == 0)
            {
                return 1 + result1;
            }
            else
            {
                return 1 + Math.min(result1,result2);
            }
        }
    }
}
