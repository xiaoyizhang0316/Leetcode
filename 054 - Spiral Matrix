Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

Example 1:

Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
Output: [1,2,3,6,9,8,7,4,5]
Example 2:

Input:
[
  [1, 2, 3, 4],
  [5, 6, 7, 8],
  [9,10,11,12]
]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]
-------------------------Solution-----------------------------

public class Solution {
    public IList<int> SpiralOrder(int[][] matrix) {
        List<int> result = new List<int>();
        if (matrix.Length == 0)
            return result;
        int index = 0;
        int left = 0,top = 0;
        int right = matrix[0].Length - 1;
        int bottom = matrix.Length - 1;

        while (bottom >= top && right >= left)
        {
            switch (index)
            {
                case 0:
                    {
                        for (int i = left; i <= right; i++)
                        {
                            result.Add(matrix[top][i]);
                        }
                        top++;
                    }
                    break;
                case 1:
                    {
                        for (int i = top; i <= bottom; i++)
                        {
                            result.Add(matrix[i][right]);
                        }
                        right--;
                    }
                    break;
                case 2:
                    {
                        for (int i = right; i >= left; i--)
                        {
                            result.Add(matrix[bottom][i]);
                        }
                        bottom--;
                    }
                    break;
                case 3:
                    {
                        for (int i = bottom; i >= top; i--)
                        {
                            result.Add(matrix[i][left]);
                        }
                        left++;
                    }
                    break;
                default:
                    break;
            }
            index++;
            if (index == 4)
                index = 0;
        }
        return result;
    }
}
