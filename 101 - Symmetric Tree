Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */



class Solution {
    public boolean isSymmetric(TreeNode root) {
        if (root == null)
        return true;
        return compareTree(root.left,root.right);
}
    public boolean compareTree(TreeNode left, TreeNode right){
    if (left ==null && right == null)
    return true;
    if (left == null || right == null)
    return false;
    return left.val == right.val && compareTree(left.left, right.right) && compareTree(left.right,right.left);
}
}
