Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string isÂ also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true
--------------------Solution-----------------------
public class Solution {
    public bool IsValid(string s) {
                Stack<char> temp = new Stack<char>();
        char[] charArray = s.ToCharArray();
        for (int i = 0; i < charArray.Length; i++)
        {
            switch(charArray[i])
            {
                case '(':
                case '[':
                case '{':
                    temp.Push(charArray[i]);
                    break;
                case ')':
                    if (temp.Count == 0)
                        return false;
                    if (temp.Peek() != '(')
                        return false;
                    else
                        temp.Pop();
                    break;
                case ']':
                    if (temp.Count == 0)
                        return false;
                    if (temp.Peek() != '[')
                        return false;
                    else
                        temp.Pop();
                    break;
                case '}':
                    if (temp.Count == 0)
                        return false;
                    if (temp.Peek() != '{')
                        return false;
                    else
                        temp.Pop();
                    break;
                default:
                    break;
            }
        }
        if (temp.Count == 0)
            return true;
        else
            return false;
    }
}
